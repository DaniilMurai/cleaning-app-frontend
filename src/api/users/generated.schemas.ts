/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * Neuer Standard Users API
 * OpenAPI spec version: 0.1.0
 */
export interface HTTPValidationError {
  detail?: ValidationError[];
}

export const SuccessResponseValue = {
  success: true,
} as const;
export type SuccessResponse = typeof SuccessResponseValue;

export type UpdateUserDataNickname = string | null;

export type UpdateUserDataFullName = string | null;

export interface UpdateUserData {
  nickname?: UpdateUserDataNickname;
  full_name?: UpdateUserDataFullName;
}

export type UserRole = typeof UserRole[keyof typeof UserRole];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UserRole = {
  employee: 'employee',
  admin: 'admin',
  superadmin: 'superadmin',
} as const;

export type UserSchemaFullName = string | null;

export type UserSchemaAdminNote = string | null;

export interface UserSchema {
  id: number;
  nickname: string;
  role: UserRole;
  status: UserStatus;
  full_name: UserSchemaFullName;
  admin_note: UserSchemaAdminNote;
  created_at: string;
}

export type UserStatus = typeof UserStatus[keyof typeof UserStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UserStatus = {
  pending: 'pending',
  active: 'active',
  disabled: 'disabled',
} as const;

export interface UserUpdatePassword {
  old_password: string;
  new_password: string;
}

export type ValidationErrorLocItem = string | number;

export interface ValidationError {
  loc: ValidationErrorLocItem[];
  msg: string;
  type: string;
}

